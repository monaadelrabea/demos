version: "3.7"

services:

  zookeeper:
    image: bitnami/zookeeper:3
    ports:
      - '2181:2181'
    volumes:
      - zookeeper_data:/bitnami
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - elk-network

  kafka:
    image: bitnami/kafka:2
    ports:
      - '9092:9092'
      - '29092:29092'
    volumes:
      - kafka_data:/bitnami
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    networks:
      - elk-network
    depends_on:
      - zookeeper
  elk-logs-demo:
    image: mona1adel/demos:elk-logs-demo-1.0.0
    ports:
      - "7070:8081"
    environment:
      - "LOG_LEVEL_SERVICE=all"
      - "LOG_KAFKA_TOPIC=elk-logs-demo"
      - "LOGGING_BOOTSTRAP_SERVERS=kafka:9092"
    networks:
      - elk-network
    depends_on:
      - zookeeper
      - kafka
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - "./elasticsearch:/usr/share/elasticsearch/data"
    networks:
      - elk-network
    container_name: elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.4
    ports:
      - '9600:9600'
    volumes:
      - ./logstash-kafka.conf:/usr/share/logstash/config/logstash-kafka.conf
      - ./pipelines.yml:/usr/share/logstash/config/pipelines.yml
    command: bash -c "/usr/share/logstash/bin/logstash"
    depends_on:
      - elasticsearch
    networks:
      - elk-network
    container_name: logstash

  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.4
    ports:
      - '5601:5601'
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - elk-network
    depends_on:
      - elasticsearch
      - logstash
    container_name: kibana

networks:
  elk-network:

volumes:
  logstach_data:
  zookeeper_data:
  kafka_data:
